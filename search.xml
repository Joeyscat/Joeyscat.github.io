<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux下使用scp命令来通过ssh传输文件</title>
      <link href="/2019/06/30/linux-copy-files-with-scp/"/>
      <url>/2019/06/30/linux-copy-files-with-scp/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux下使用scp命令来通过ssh传输文件"><a href="#Linux下使用scp命令来通过ssh传输文件" class="headerlink" title="Linux下使用scp命令来通过ssh传输文件"></a>Linux下使用scp命令来通过ssh传输文件</h3><h4 id="从服务器上下载文件到本地"><a href="#从服务器上下载文件到本地" class="headerlink" title="从服务器上下载文件到本地"></a>从服务器上下载文件到本地</h4><h6 id="例如将服务器上的logo文件下载到本地"><a href="#例如将服务器上的logo文件下载到本地" class="headerlink" title="例如将服务器上的logo文件下载到本地"></a>例如将服务器上的logo文件下载到本地</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scp username@servername:/home/logo.png /home/joey/download</span><br></pre></td></tr></table></figure><h4 id="上传本地文件到服务器"><a href="#上传本地文件到服务器" class="headerlink" title="上传本地文件到服务器"></a>上传本地文件到服务器</h4><h5 id="将本地readme文件上传到服务器-home目录"><a href="#将本地readme文件上传到服务器-home目录" class="headerlink" title="将本地readme文件上传到服务器/home目录"></a>将本地readme文件上传到服务器/home目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scp /home/joey/readme.txt username@servername:/home/</span><br></pre></td></tr></table></figure><h4 id="从服务器上下载整个目录"><a href="#从服务器上下载整个目录" class="headerlink" title="从服务器上下载整个目录"></a>从服务器上下载整个目录</h4><h5 id="例如从服务器下载log目录（包含所有子文件）"><a href="#例如从服务器下载log目录（包含所有子文件）" class="headerlink" title="例如从服务器下载log目录（包含所有子文件）"></a>例如从服务器下载log目录（包含所有子文件）</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scp -r username@servername:/home/<span class="built_in">log</span>/ /home/joey/download</span><br></pre></td></tr></table></figure><h4 id="上传目录到服务器"><a href="#上传目录到服务器" class="headerlink" title="上传目录到服务器"></a>上传目录到服务器</h4><h5 id="例如将本地img目录上传到服务器-home目录"><a href="#例如将本地img目录上传到服务器-home目录" class="headerlink" title="例如将本地img目录上传到服务器/home目录"></a>例如将本地img目录上传到服务器/home目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ scp -r /home/joey/img/ username@servername:/home/</span><br></pre></td></tr></table></figure><blockquote><p>——username:服务器用户名（需要相应密码）<br>——servername：服务器地址（IP）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐视频</title>
      <link href="/2019/06/29/videos/"/>
      <url>/2019/06/29/videos/</url>
      
        <content type="html"><![CDATA[<h5 id="Hithere"><a href="#Hithere" class="headerlink" title="Hithere"></a>Hithere</h5><h6 id="在美国监狱里，娈童犯真的会被轮流爆菊嘛？Are-Chinese-people-isolated-in-the-world"><a href="#在美国监狱里，娈童犯真的会被轮流爆菊嘛？Are-Chinese-people-isolated-in-the-world" class="headerlink" title="在美国监狱里，娈童犯真的会被轮流爆菊嘛？Are Chinese people isolated in the world?"></a>在美国监狱里，娈童犯真的会被轮流爆菊嘛？Are Chinese people isolated in the world?</h6><!-- <div align="center"> --><iframe width="560" height="315" src="https://www.youtube.com/embed/pSs8nBJKgjw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><!-- </div> --><h5 id="Nathan-Rich"><a href="#Nathan-Rich" class="headerlink" title="Nathan Rich"></a>Nathan Rich</h5><h6 id="China’s-Saddest-Clown"><a href="#China’s-Saddest-Clown" class="headerlink" title="China’s Saddest Clown"></a>China’s Saddest Clown</h6><!-- <div align="center"> --><iframe width="560" height="315" src="https://www.youtube.com/embed/WVEV9kD_r1Q" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><!-- </div> --><h6 id="A-Coffee-with-Huawei’s-CEO"><a href="#A-Coffee-with-Huawei’s-CEO" class="headerlink" title="A Coffee with Huawei’s CEO"></a>A Coffee with Huawei’s CEO</h6><!-- <div align="center"> --><iframe width="560" height="315" src="https://www.youtube.com/embed/ICU_g4jXpas" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><!-- </div> --><h6 id="❌-Hong-Kong-Riots"><a href="#❌-Hong-Kong-Riots" class="headerlink" title="❌ Hong Kong Riots"></a>❌ Hong Kong Riots</h6><!-- <div align="center"> --><iframe width="560" height="315" src="https://www.youtube.com/embed/JTHG1lRuYSU" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><!-- </div> --><h6 id="Hotpot-News-June-20-2019"><a href="#Hotpot-News-June-20-2019" class="headerlink" title="Hotpot News June 20, 2019"></a>Hotpot News June 20, 2019</h6><!-- <div align="center"> --><iframe width="560" height="315" src="https://www.youtube.com/embed/WEl01k4XmDA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><!-- </div> --><h6 id="❌-The-REAL-Reason-Facebook-is-banned-in-China"><a href="#❌-The-REAL-Reason-Facebook-is-banned-in-China" class="headerlink" title="❌ The REAL Reason Facebook is banned in China!"></a>❌ The REAL Reason Facebook is banned in China!</h6><!-- <div align="center"> --><iframe width="560" height="315" src="https://www.youtube.com/embed/f2srfDwM2sQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><!-- </div> -->]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis数据类型之字符串类型</title>
      <link href="/2019/06/28/redis-data-type-redis-string/"/>
      <url>/2019/06/28/redis-data-type-redis-string/</url>
      
        <content type="html"><![CDATA[<h2 id="Redis数据类型之字符串类型"><a href="#Redis数据类型之字符串类型" class="headerlink" title="Redis数据类型之字符串类型"></a>Redis数据类型之字符串类型</h2><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><h4 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h4><p>Redis String类型是可以与Redis键关联的最简单的值类型。: )</p><h4 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h4><h5 id="SET-key-value-赋值"><a href="#SET-key-value-赋值" class="headerlink" title="SET key value (赋值)"></a>SET key value (赋值)</h5><p>以键名<code>key</code>保存一个字符串<code>value</code>。当<code>key</code>已经存在对应的值时会被覆盖，无论它原本保存的是什么类型的数据。<a href="https://redis.io/commands/set" target="_blank" rel="noopener">【文档】</a></p><h5 id="GET-key-取值"><a href="#GET-key-取值" class="headerlink" title="GET key (取值)"></a>GET key (取值)</h5><p>获取键名<code>key</code>对应的值。如果如果该键不存在则返回<code>nil</code>。当<code>key</code>中存储的数据不是<code>string</code>类型时会返回错误，因为GET指令只处理string类型的值<a href="https://redis.io/commands/get" target="_blank" rel="noopener">【文档】</a></p><h6 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">redis&gt; HSET hset1 name Joey <span class="comment"># 存入一个散列类型的键值</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; TYPE hset1</span><br><span class="line"><span class="built_in">hash</span></span><br><span class="line">redis&gt; GET hset1 <span class="comment"># GET 命令不能用来获取字符串类型以外的value</span></span><br><span class="line">(error) WRONGTYPE Operation against a key holding the wrong kind of value</span><br><span class="line">redis&gt; SET hset1 str <span class="comment"># SET 命令使用相同的键存入字符串，覆盖了原来的散列类型数据</span></span><br><span class="line">OK</span><br><span class="line">redis&gt; GET hset1 <span class="comment"># GET 获取字符串类型数据</span></span><br><span class="line"><span class="string">"str"</span></span><br><span class="line">redis&gt; TYPE hset1</span><br><span class="line">string</span><br></pre></td></tr></table></figure><h5 id="INCR-key-递增数字"><a href="#INCR-key-递增数字" class="headerlink" title="INCR key (递增数字)"></a>INCR key (递增数字)</h5><p>将<code>key</code>存储的数字+1并返回。如果<code>key</code>包含错误类型（<code>string</code>以外的类型）的<code>value</code>或包含不能表示为整数的字符串，则会提示错误。当要操作的<code>key</code>不存在时会默认<code>value</code>为0，所以第一次递增后的结果是1。<a href="https://redis.io/commands/incr" target="_blank" rel="noopener">【文档】</a></p><h6 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a>示例：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis&gt; SET myint 520</span><br><span class="line">OK</span><br><span class="line">redis&gt; INCR myint</span><br><span class="line">(<span class="built_in">integer</span>) 521</span><br><span class="line">redis&gt; GET myint</span><br><span class="line"><span class="string">"521"</span></span><br></pre></td></tr></table></figure><h5 id="INCRBY-key-increment-增加指定的整数"><a href="#INCRBY-key-increment-增加指定的整数" class="headerlink" title="INCRBY key increment (增加指定的整数)"></a>INCRBY key increment (增加指定的整数)</h5><p>除了能指定递增的number大小，就跟INCR命令一样了。<a href="https://redis.io/commands/incrby" target="_blank" rel="noopener">【文档】</a></p><p>所以 INCR key 跟 INCRBY key 1 是一样的</p><h6 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis&gt; INCRBY myint1 1</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis&gt; GET myint1</span><br><span class="line"><span class="string">"1"</span></span><br></pre></td></tr></table></figure><h5 id="DECR-递减数字"><a href="#DECR-递减数字" class="headerlink" title="DECR 递减数字"></a>DECR 递减数字</h5><p>将<code>key</code>中存储的数字减1。如果<code>key</code>包含错误类型（<code>string</code>以外的类型）的<code>value</code>或包含不能表示为整数的字符串，则会提示错误。当要操作的<code>key</code>不存在时会默认<code>value</code>为0，所以第一次递增后的结果是-1。<a href="https://redis.io/commands/decr" target="_blank" rel="noopener">【文档】</a></p><h6 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis&gt; SET number1 10</span><br><span class="line"><span class="string">"OK"</span></span><br><span class="line">redis&gt; DECR number1</span><br><span class="line">(<span class="built_in">integer</span>) 9</span><br><span class="line">redis&gt; DECR number2</span><br><span class="line">(<span class="built_in">integer</span>) -1</span><br></pre></td></tr></table></figure><h5 id="APPEND-key-value-向尾部追加字符串"><a href="#APPEND-key-value-向尾部追加字符串" class="headerlink" title="APPEND key value 向尾部追加字符串"></a>APPEND key value 向尾部追加字符串</h5><p>如果<code>key</code>已存在且为字符串，则此命令会在字符串末尾附加<code>value</code>。如果<code>key</code>不存在，则创建它并将其设置为空字符串，因此在这种特殊情况下<code>APPEND</code>将类似于<code>SET</code>。<a href="https://redis.io/commands/append" target="_blank" rel="noopener">【文档】</a></p><h6 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">redis&gt; APPEND s1 abc</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">redis&gt; GET s1</span><br><span class="line"><span class="string">"abc"</span></span><br><span class="line">redis&gt; APPEND s1 def</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line">redis&gt; GET s1</span><br><span class="line"><span class="string">"abcdef"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle配置init.gradle解决下载速度慢问题</title>
      <link href="/2018/04/07/gradle-config-init-gradle/"/>
      <url>/2018/04/07/gradle-config-init-gradle/</url>
      
        <content type="html"><![CDATA[<h3 id="配置阿里云镜像"><a href="#配置阿里云镜像" class="headerlink" title="配置阿里云镜像"></a>配置阿里云镜像</h3><p>以下两种配置方式二选一</p><h4 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h4><p>新建配置文件 USER_HOME/.gradle/</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.gradle/init.gradle</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">allprojects&#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        def ALIYUN_REPOSITORY_URL = <span class="string">'http://maven.aliyun.com/nexus/content/groups/public'</span></span><br><span class="line">        def ALIYUN_JCENTER_URL = <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span></span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            <span class="keyword">if</span>(repo <span class="keyword">instanceof</span> MavenArtifactRepository)&#123;</span><br><span class="line">                def url = repo.url.toString()</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">'https://repo1.maven.org/maven2'</span>)) &#123;</span><br><span class="line">                    project.logger.lifecycle <span class="string">"Repository $&#123;repo.url&#125; replaced by $ALIYUN_REPOSITORY_URL."</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">'https://jcenter.bintray.com/'</span>)) &#123;</span><br><span class="line">                    project.logger.lifecycle <span class="string">"Repository $&#123;repo.url&#125; replaced by $ALIYUN_JCENTER_URL."</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">                url ALIYUN_REPOSITORY_URL</span><br><span class="line">            url ALIYUN_JCENTER_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><p>项目所属的 build.gradle 文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> &#125;</span><br><span class="line">                maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.2.3'</span></span><br><span class="line"></span><br><span class="line">    &#125;        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> &#125;</span><br><span class="line">        maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下的缓存机制及清理buffer/cache/swap的方法梳理【转】</title>
      <link href="/2018/03/16/linux-cache-cleaning/"/>
      <url>/2018/03/16/linux-cache-cleaning/</url>
      
        <content type="html"><![CDATA[<h3 id="Linux下的缓存机制及清理buffer-cache-swap的方法梳理【转】"><a href="#Linux下的缓存机制及清理buffer-cache-swap的方法梳理【转】" class="headerlink" title="Linux下的缓存机制及清理buffer/cache/swap的方法梳理【转】"></a>Linux下的缓存机制及清理buffer/cache/swap的方法梳理【转】</h3><ul><li>原文：<a href="https://www.cnblogs.com/kevingrace/p/5991604.html" target="_blank" rel="noopener">linux下的缓存机制及清理buffer/cache/swap的方法梳理</a></li></ul><h4 id="1-缓存机制介绍"><a href="#1-缓存机制介绍" class="headerlink" title="1.缓存机制介绍"></a>1.缓存机制介绍</h4><p>在Linux系统中，为了提高文件系统性能，内核利用一部分物理内存分配出缓冲区，用于缓存系统操作和数据文件，当内核收到读写的请求时，内核先去缓存区找是否有请求的数据，有就直接返回，如果没有则通过驱动程序直接操作磁盘。<br>缓存机制优点：减少系统调用次数，降低CPU上下文切换和磁盘访问频率。<br>CPU上下文切换：CPU给每个进程一定的服务时间，当时间片用完后，内核从正在运行的进程中收回处理器，同时把进程当前运行状态保存下来，然后加载下一个任务，这个过程叫做上下文切换。实质上就是被终止运行进程与待运行进程的进程切换。</p><h4 id="2-查看缓存区及内存使用情况"><a href="#2-查看缓存区及内存使用情况" class="headerlink" title="2.查看缓存区及内存使用情况"></a>2.查看缓存区及内存使用情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">joey@Joey:~$ top</span><br><span class="line">top - 16:59:44 up  7:55,  1 user,  load average: 0.60, 0.73, 0.87</span><br><span class="line">Tasks: 225 total,   1 running, 224 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  1.8 us,  0.5 sy,  0.0 ni, 97.6 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  8069972 total,  5060444 free,  1776368 used,  1233160 buff/cache</span><br><span class="line">KiB Swap:  8000508 total,  8000508 free,        0 used.  5590520 avail Mem</span><br></pre></td></tr></table></figure><p>空闲内存=free + buffers + cached；<br>已用内存=total - 空闲内存；</p><h4 id="3-缓存区分buffers和cached区别"><a href="#3-缓存区分buffers和cached区别" class="headerlink" title="3.缓存区分buffers和cached区别"></a>3.缓存区分buffers和cached区别</h4><p>内核在保证系统能正常使用物理内存和数据量读写情况下来分配缓冲区大小。<br>buffers用来缓存metadata及pages，可以理解为系统缓存，例如，vi打开一个文件。<br>cached是用来给文件做缓存，可以理解为数据块缓存，例如，dd if=/dev/zero of=/tmp/test count=1 bs=1G 测试写入一个文件，就会被缓存到缓冲区中，当下一次再执行这个测试命令时，写入速度会明显很快。</p><h4 id="4-Swap用途"><a href="#4-Swap用途" class="headerlink" title="4.Swap用途"></a>4.Swap用途</h4><p>Swap意思是交换分区，通常我们说的虚拟内存，是从硬盘中划分出的一个分区。当物理内存不够用的时候，内核就会释放缓存区（buffers/cache）里一些长时间不用的程序，然后将这些程序临时放到Swap中，也就是说如果物理内存和缓存区内存不够用的时候，才会用到Swap。<br>swap清理：<br>swapoff -a &amp;&amp; swapon -a<br>注意：这样清理有个前提条件，空闲的内存必须比已经使用的swap空间大</p><h4 id="5-释放缓存区内存的方法"><a href="#5-释放缓存区内存的方法" class="headerlink" title="5.释放缓存区内存的方法"></a>5.释放缓存区内存的方法</h4><ol><li><p>清理pagecache（页面缓存）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches     或者 <span class="comment"># sysctl -w vm.drop_caches=1</span></span><br></pre></td></tr></table></figure></li><li><p>清理dentries（目录缓存）和inodes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/vm/drop_caches     或者 <span class="comment"># sysctl -w vm.drop_caches=2</span></span><br></pre></td></tr></table></figure></li><li><p>清理pagecache、dentries和inodes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches     或者 <span class="comment"># sysctl -w vm.drop_caches=3</span></span><br></pre></td></tr></table></figure></li></ol><p>上面三种方式都是临时释放缓存的方法，要想永久释放缓存，需要在/etc/sysctl.conf文件中配置：vm.drop_caches=1/2/3，然后sysctl -p生效即可！</p><p>   另外，可以使用sync命令来清理文件系统缓存，还会清理僵尸(zombie)对象和它们占用的内存</p><p>——————–友情提示一下———————-<br>上面操作在大多数情况下都不会对系统造成伤害，只会有助于释放不用的内存。<br>但是如果在执行这些操作时正在写数据，那么实际上在数据到达磁盘之前就将它从文件缓存中清除掉了，这可能会造成很不好的影响。那么如果避免这种事情发生呢？<br>因此，这里不得不提一下/proc/sys/vm/vfs_cache_pressure这个文件，告诉内核，当清理inoe/dentry缓存时应该用什么样的优先级。</p><blockquote><p>vfs_cache_pressure=100    这个是默认值，内核会尝试重新声明<br>dentries和inodes，并采用一种相对于页面缓存和交换缓存比较”合理”的比例。<br>减少vfs_cache_pressure的值，会导致内核倾向于保留dentry和inode缓存。<br>增加vfs_cache_pressure的值，（即超过100时），则会导致内核倾向于重新声明dentries和inodes<br>总之，vfs_cache_pressure的值：<br>小于100的值不会导致缓存的大量减少<br>超过100的值则会告诉内核你希望以高优先级来清理缓存。<br>其实无论vfs_cache_pressure的值采用什么值，内核清理缓存的速度都是比较低的。<br>如果将此值设置为10000，系统将会将缓存减少到一个合理的水平。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
